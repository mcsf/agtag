const Component = () => null;

export default forwardRef( Component );

export default withFilters( 'editor.PostTaxonomyType' )(
	HierarchicalTermSelector
);

export default withSelect( ( select ) => {
	const { getSelectedBlockClientIds } = select( blockEditorStore );
	return {
		clientIds: getSelectedBlockClientIds(),
	};
} )( ReusableBlocksMenuItems );

export default compose( [
	withSelect( ( select, { clientId } ) => ( {
		wasBlockJustInserted: select( blockEditorStore ).wasBlockJustInserted(
			clientId,
			'inserter_menu'
		),
	} ) ),
	withDispatch( ( dispatch ) => {
		const { createErrorNotice } = dispatch( noticesStore );

		return { createErrorNotice };
	} ),
	withPreferredColorScheme,
] )( VideoEdit );
